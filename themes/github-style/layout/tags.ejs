<div class="tags-container">
  <div class="tags-header">
    <h1 class="tags-title">文章标签</h1>
    <p class="tags-subtitle">共 <%= site.tags.length %> 个标签</p>
  </div>

  <div class="tags-controls">
    <div class="tags-search">
      <input type="text" id="tags-search" placeholder="搜索标签..." class="tags-search-input">
      <button id="tags-search-clear" class="tags-search-clear" style="display: none;">
        <i class="fas fa-times"></i>
      </button>
    </div>
  </div>

  <div class="tags-cloud">
    <% 
      var counts = site.tags.map(tag => tag.posts.length);
      var maxCount = Math.max(...counts);
      var minCount = Math.min(...counts);
    %>
    
    <% site.tags.sort('name').forEach(function(tag) { 
      var sizeClass = 'tag-size-' + Math.min(5, Math.max(1, Math.ceil((tag.posts.length - minCount) / Math.max(1, (maxCount - minCount)) * 5)));
    %>
      <a href="<%- url_for(tag.path) %>" 
         class="tag-cloud-item <%= sizeClass %>"
         data-tag="<%= tag.name %>"
         data-count="<%= tag.posts.length %>">
        #<%= tag.name %>
        <span class="tag-count">(<%= tag.posts.length %>)</span>
      </a>
    <% }) %>
  </div>
</div>

<style>
.tags-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 40px 20px;
}

.tags-header {
  text-align: center;
  margin-bottom: 40px;
  padding-bottom: 20px;
  border-bottom: 1px solid #e1e4e8;
}

.tags-title {
  font-size: 32px;
  font-weight: 600;
  color: #24292e;
  margin-bottom: 8px;
}

.tags-subtitle {
  font-size: 16px;
  color: #586069;
}

.tags-controls {
  display: flex;
  gap: 20px;
  margin-bottom: 30px;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}

.tags-search {
  position: relative;
  flex: 1;
  max-width: 300px;
}

.tags-search-input {
  width: 100%;
  padding: 10px 40px 10px 15px;
  border: 1px solid #e1e4e8;
  border-radius: 6px;
  font-size: 14px;
  background: #fff;
}

.tags-search-clear {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: #586069;
  cursor: pointer;
  padding: 5px;
}

.tags-cloud {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
  padding: 40px 20px;
}

.tag-cloud-item {
  display: inline-block;
  padding: 8px 16px;
  background: #f6f8fa;
  border: 1px solid #e1e4e8;
  border-radius: 20px;
  color: #0366d6;
  text-decoration: none;
  transition: all 0.2s ease;
}

.tag-cloud-item:hover {
  background: #0366d6;
  color: #fff;
  border-color: #0366d6;
  text-decoration: none;
}

.tag-cloud-item.highlight {
  background: #0366d6;
  color: #fff;
  border-color: #0366d6;
  transform: scale(1.1);
}

.tag-size-1 { font-size: 12px; opacity: 0.6; }
.tag-size-2 { font-size: 14px; opacity: 0.7; }
.tag-size-3 { font-size: 16px; opacity: 0.8; }
.tag-size-4 { font-size: 18px; opacity: 0.9; }
.tag-size-5 { font-size: 20px; opacity: 1; }

.tag-count {
  font-size: 12px;
  color: #586069;
  margin-left: 5px;
}

.tag-cloud-item.highlight .tag-count {
  color: #fff;
}

@media (max-width: 768px) {
  .tags-container {
    padding: 20px 10px;
  }
  
  .tags-title {
    font-size: 24px;
  }
  
  .tags-controls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .tags-search {
    max-width: none;
  }
  
  .tags-cloud {
    padding: 20px 10px;
  }
}
</style>

<script>
(function() {
  'use strict';

  // URL参数处理
  function getUrlParameter(name) {
    name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
    var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
    var results = regex.exec(location.search);
    return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
  }

  // 获取URL路径中的标签名
  function getTagFromPath() {
    var path = window.location.pathname;
    var match = path.match(/\/tags\/([^\/]+)/);
    return match ? decodeURIComponent(match[1]) : '';
  }

  // 搜索和过滤功能
  function searchTags(query) {
    var tags = document.querySelectorAll('.tag-cloud-item');
    var searchInput = document.getElementById('tags-search');
    
    if (searchInput) {
      searchInput.value = query;
    }
    
    var foundTag = null;
    
    tags.forEach(function(tag) {
      var tagName = tag.getAttribute('data-tag').toLowerCase();
      var displayName = tag.getAttribute('data-tag');
      
      if (query && (tagName === query.toLowerCase() || displayName === query)) {
        tag.classList.add('highlight');
        foundTag = tag;
      } else {
        tag.classList.remove('highlight');
      }
    });
    
    // 如果找到匹配的标签，滚动到该标签
    if (foundTag) {
      setTimeout(function() {
        foundTag.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }, 100);
    }
    
    // 显示清除按钮
    var searchClear = document.getElementById('tags-search-clear');
    if (searchClear) {
      searchClear.style.display = query ? 'block' : 'none';
    }
  }

  // 搜索功能
  function initSearch() {
    var searchInput = document.getElementById('tags-search');
    var searchClear = document.getElementById('tags-search-clear');
    
    if (!searchInput) return;
    
    searchInput.addEventListener('input', function(e) {
      var query = e.target.value;
      var tags = document.querySelectorAll('.tag-cloud-item');
      
      tags.forEach(function(tag) {
        var tagName = tag.getAttribute('data-tag').toLowerCase();
        if (tagName.includes(query.toLowerCase())) {
          tag.style.display = 'inline-block';
        } else {
          tag.style.display = 'none';
        }
      });
      
      if (e.target.value.trim()) {
        searchClear.style.display = 'block';
      } else {
        searchClear.style.display = 'none';
      }
    });
    
    searchClear.addEventListener('click', function() {
      searchInput.value = '';
      var tags = document.querySelectorAll('.tag-cloud-item');
      tags.forEach(function(tag) {
        tag.style.display = 'inline-block';
        tag.classList.remove('highlight');
      });
      searchClear.style.display = 'none';
    });
  }

  // 初始化
  document.addEventListener('DOMContentLoaded', function() {
    initSearch();
    
    // 检查URL参数或路径中的标签
    var urlTag = getTagFromPath();
    var paramTag = getUrlParameter('tag');
    var searchQuery = urlTag || paramTag;
    
    if (searchQuery) {
      // 延迟执行以确保DOM完全加载
      setTimeout(function() {
        searchTags(searchQuery);
      }, 100);
    }
  });
})();
</script>
